"""Create CHIMERA deception schema and tables

Revision ID: 95cdd51c35cc
Revises: e5875039f9d9
Create Date: 2025-10-06 13:44:23.894528

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '95cdd51c35cc'
down_revision: Union[str, Sequence[str], None] = 'e5875039f9d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS chimera_deception")
    op.create_table('lures',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('lure_type', sa.String(length=50), nullable=False),
    sa.Column('encrypted_content', sa.LargeBinary(), nullable=False),
    sa.Column('deployment_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='chimera_deception'
    )
    op.create_table('trigger_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('lure_id', sa.UUID(), nullable=False),
    sa.Column('trigger_type', sa.String(length=50), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('source_ip', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('trigger_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('handled', sa.Boolean(), nullable=True),
    sa.Column('triggered_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['lure_id'], ['chimera_deception.lures.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='chimera_deception'
    )
    op.create_index(op.f('ix_chimera_deception_trigger_events_session_id'), 'trigger_events', ['session_id'], unique=False, schema='chimera_deception')
    op.create_index('ix_audit_type_timestamp', 'audit_events', ['event_type', 'timestamp'], unique=False)
    op.create_index('ix_audit_user_timestamp', 'audit_events', ['user_id', 'timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_audit_user_timestamp', table_name='audit_events')
    op.drop_index('ix_audit_type_timestamp', table_name='audit_events')
    op.drop_index(op.f('ix_chimera_deception_trigger_events_session_id'), table_name='trigger_events', schema='chimera_deception')
    op.drop_table('trigger_events', schema='chimera_deception')
    op.drop_table('lures', schema='chimera_deception')
    op.execute("DROP SCHEMA IF EXISTS chimera_deception")
    # ### end Alembic commands ###
